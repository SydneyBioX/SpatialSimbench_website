install.packages("quarto")
setwd("C:/Users/mtor0581/SPDS_Projects/SpatialSimBench_website2/results/data")
library(readr)
final_data2 <- read_csv("final_data2.csv")
View(final_data2)
knitr::opts_chunk$set(echo = TRUE)
data <- final_data2
View(data)
data <- final_data2
columns_to_normalize <- c("spfracZero", "spLibSize", "spEffLibSize", "spTMM", "spScaledVar",
"spScaledMean", "splibsizeFracezero", "spCorPearson", "ftFracZero",
"ftScaledVar", "ftScaledMean", "ftPearson", "ftScaleMeanVal",
"ftMeanFraczero", "TM", "NWE", "CSM", "celltype_interaction",
"L_stats", "nn_correlation", "morans_I", "ARI", "NMI", "recall_svg",
"precision_svg", "rmse_ctprob", "jsd_ctprob", "mantel_cor", "cosine_cor")
# "pred_time_cells200_features200", "pred_time_cells3000_features500",
# "pred_time_cells5000_features1000", "pred_memory_cells200_features200",
# "pred_memory_cells3000_features500", "pred_memory_cells5000_features1000",
# "predstring_time_cells200_features200")
data[columns_to_normalize] <- lapply(data[columns_to_normalize], function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
})
View(data)
data[columns_to_normalize] <- round(data[columns_to_normalize], 2)
write.csv(data,"./final_data3.csv", row.names = FALSE)
write.csv(data,"./final_data3.csv", row.names = FALSE)
setwd("C:/Users/mtor0581/SPDS_Projects/SpatialSimBench_website2/results/data")
write.csv(data,"./final_data3.csv", row.names = FALSE)
write.csv(data,"final_data3.csv", row.names = FALSE)
write.csv(data,"C:/Users/mtor0581/SPDS_Projects/SpatialSimBench_website2/results/data/final_data3.csv", row.names = FALSE)
