{"title":"Results","markdown":{"yaml":{"title":"Results","toc":false,"resources":["js"]},"headingText":"Results - Heatmap","containsRefs":false,"markdown":"\n\n\n\n\n```{ojs}\n//| echo: false\n\nfunkyheatmap = (await require('d3@7').then(d3 => {\n\n  window.d3 = d3;\n\n  window._ = _;\n\n  //return import('https://unpkg.com/funkyheatmapjs@0.2.5');\n  return import('./js/funkyheatmap.js')\n\n})).default;\n\n//d3 = require(\"d3@7\")\n//import { funkyheatmap } from './js/funkyheatmap.js'\n\n```\n\n\n```{r setup}\n#| label: load-packages\n#| include: false\n#| error: true\n#| echo: false\n\nlibrary(tidyverse)\nlibrary(funkyheatmap)\nlibrary(kableExtra)\nlibrary(readr)\nlibrary(DT)\nlibrary(plotly)\nlibrary(jsonlite)\n``` \n\n\n\n```{ojs}\n//| label: read data\n//| warning: false\n//| echo: false\n\n//color_by_rank = Inputs.toggle({label: \"Color by rank:\", value: true})\n//scale_column = Inputs.toggle({label: \"Minmax column:\", value: false})\n//show_con = Inputs.toggle({label: \"Show control methods:\", value: true})\n\n\nfinal_data_raw = FileAttachment(\"./data/final_data2.csv\").csv()\n\ncolumn_info = await FileAttachment(\"./data/column_info_v2.csv\").csv()\ncolumn_groups = await FileAttachment(\"./data/column_groups.JSON\").json()\n\npalettes = [\n    {\n        overall: \"Greys\",\n        palette1: \"Blues\",\n        palette2: \"Reds\",\n        palette3: \"Yellows\",\n        palette4: \"YlOrBr\",\n        NA: \"Greys\",\n        white6black4: \"Greys\",\n        error_reason: {\n          colors: [\"#8DD3C7\", \"#FFFFB3\", \"#BEBADA\", \"#FFFFFF\"],\n          names: [\"Memory limit exceeded\", \"Time limit exceeded\", \"Execution error\", \"No error\"]\n        }\n      }\n    ][0]     \n\n/* poss_method_ids = method_info\n  .map(d => d.method)\n  .filter(d => results.map(r => r.method).includes(d))\nposs_metric_ids = metric_info\n  .map(d => d.metric)\n  .filter(d => results.map(r => Object.keys(r.scaled_scores)).flat().includes(d))     */\n```\n\n```{ojs}\n//| echo: false\n\n// Remove a suffix from a column\nfunction removeSuffix(data, column, suffix) {\n  return data.map(row => {\n    if (row[column].endsWith(suffix)) {\n      row[column] = row[column].replace(new RegExp(suffix + '$'), ''); // Remove the suffix\n    }\n    return row;\n  });\n}\n\n\nfunction removeLastNColumns(data, n) {\n  if (data.length === 0 || n <= 0) return data;\n\n  // Extract the keys of the columns\n  const keys = Object.keys(data[0]);\n\n  // Determine the columns to keep\n  const columnsToKeep = keys.slice(0, -n);\n\n  // Filter columns for each row\n  return data.map(row => {\n    const newRow = {};\n    columnsToKeep.forEach(key => {\n      newRow[key] = row[key];\n    });\n    return newRow;\n  });\n}\n\nfinal_data = removeSuffix(final_data_raw, \"method\", \"_rf\");\n//console.log(final_data)\n\n// Remove the last 4 columns from the data\nfilteredData = removeLastNColumns(final_data, 6);\n\n//console.log(filteredData)\n\nfunction removeLastNItems(array, n) {\n  return array.slice(0, -n);\n}\n\n\n// Remove the last 4 items\nfilteredColumnInfo = removeLastNItems(column_info, 12);\n\nfilteredColumnGroups = removeLastNItems(column_groups, 2);\n\n//console.log(filteredColumnGroups)\n\n\n```\n::: {.column-page}\n\n\n```{ojs}\n//| echo: false\n//| column: page\n\n\nfunction transpose_list_of_objects(list) {\n      return Object.fromEntries(Object.keys(list[0]).map(key => [key, list.map(d => d[key])]))\n    }\n\nfunkyheatmap(\n      transpose_list_of_objects(final_data),\n      transpose_list_of_objects(column_info),\n      [],\n      transpose_list_of_objects(column_groups),\n      \n      [],\n      palettes,\n      {\n          fontSize: 14,\n          rowHeight: 26,\n          rootStyle: 'max-width: none',\n          colorByRank: true\n      }\n    );\n\n\n```\n\n\n\n## Results - Table\n```{r}\n#| echo: false\n#| warning: false\n#| column: page\n\nlibrary(tibble)\nlibrary(dplyr)\n\nfinal_data_csv <- read_csv(\"./data/final_data.csv\", show_col_types = FALSE)\n\nfinal_data_csv$...1 <- NULL\n\nfinal_data_csv$method<-gsub(\"_rf\",\"\",as.character(final_data_csv$method))\n\ncolumns_to_normalize <- c(\"spfracZero\", \"spLibSize\", \"spEffLibSize\", \"spTMM\", \"spScaledVar\", \n                          \"spScaledMean\", \"splibsizeFracezero\", \"spCorPearson\", \"ftFracZero\", \n                          \"ftScaledVar\", \"ftScaledMean\", \"ftPearson\", \"ftScaleMeanVal\", \n                          \"ftMeanFraczero\", \"TM\", \"NWE\", \"CSM\", \"celltype_interaction\", \n                          \"L_stats\", \"nn_correlation\", \"morans_I\", \"ARI\", \"NMI\", \"recall_svg\", \n                          \"precision_svg\", \"rmse_ctprob\", \"jsd_ctprob\", \"mantel_cor\", \"cosine_cor\")\n                          # \"pred_time_cells200_features200\", \"pred_time_cells3000_features500\", \n                          # \"pred_time_cells5000_features1000\", \"pred_memory_cells200_features200\", \n                          # \"pred_memory_cells3000_features500\", \"pred_memory_cells5000_features1000\",\n                          # \"predstring_time_cells200_features200\")\n\nfinal_data_csv[columns_to_normalize] <- lapply(final_data_csv[columns_to_normalize], function(x) {\n  (x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))\n})\n\nfinal_data_csv$method <- factor(final_data_csv$method)\nfinal_data_csv$adaptor <- factor(final_data_csv$adaptor)\n\ndatatable(\n  final_data_csv,\n  options = list(\n    pageLength = 15,\n    scrollX = TRUE,\n    searching = TRUE,\n    autoWidth = TRUE,\n    border = TRUE\n    \n  ),\n  filter = \"top\",\n  class = 'stripe compact',\n  style = 'bootstrap'\n) %>%\n  formatRound(columns = which(sapply(final_data_csv, is.numeric)), digits = 2)\n```\n\n:::\n\n:::\n\n","srcMarkdownNoYaml":"\n\n\n\n\n```{ojs}\n//| echo: false\n\nfunkyheatmap = (await require('d3@7').then(d3 => {\n\n  window.d3 = d3;\n\n  window._ = _;\n\n  //return import('https://unpkg.com/funkyheatmapjs@0.2.5');\n  return import('./js/funkyheatmap.js')\n\n})).default;\n\n//d3 = require(\"d3@7\")\n//import { funkyheatmap } from './js/funkyheatmap.js'\n\n```\n\n\n```{r setup}\n#| label: load-packages\n#| include: false\n#| error: true\n#| echo: false\n\nlibrary(tidyverse)\nlibrary(funkyheatmap)\nlibrary(kableExtra)\nlibrary(readr)\nlibrary(DT)\nlibrary(plotly)\nlibrary(jsonlite)\n``` \n\n\n\n```{ojs}\n//| label: read data\n//| warning: false\n//| echo: false\n\n//color_by_rank = Inputs.toggle({label: \"Color by rank:\", value: true})\n//scale_column = Inputs.toggle({label: \"Minmax column:\", value: false})\n//show_con = Inputs.toggle({label: \"Show control methods:\", value: true})\n\n\nfinal_data_raw = FileAttachment(\"./data/final_data2.csv\").csv()\n\ncolumn_info = await FileAttachment(\"./data/column_info_v2.csv\").csv()\ncolumn_groups = await FileAttachment(\"./data/column_groups.JSON\").json()\n\npalettes = [\n    {\n        overall: \"Greys\",\n        palette1: \"Blues\",\n        palette2: \"Reds\",\n        palette3: \"Yellows\",\n        palette4: \"YlOrBr\",\n        NA: \"Greys\",\n        white6black4: \"Greys\",\n        error_reason: {\n          colors: [\"#8DD3C7\", \"#FFFFB3\", \"#BEBADA\", \"#FFFFFF\"],\n          names: [\"Memory limit exceeded\", \"Time limit exceeded\", \"Execution error\", \"No error\"]\n        }\n      }\n    ][0]     \n\n/* poss_method_ids = method_info\n  .map(d => d.method)\n  .filter(d => results.map(r => r.method).includes(d))\nposs_metric_ids = metric_info\n  .map(d => d.metric)\n  .filter(d => results.map(r => Object.keys(r.scaled_scores)).flat().includes(d))     */\n```\n\n```{ojs}\n//| echo: false\n\n// Remove a suffix from a column\nfunction removeSuffix(data, column, suffix) {\n  return data.map(row => {\n    if (row[column].endsWith(suffix)) {\n      row[column] = row[column].replace(new RegExp(suffix + '$'), ''); // Remove the suffix\n    }\n    return row;\n  });\n}\n\n\nfunction removeLastNColumns(data, n) {\n  if (data.length === 0 || n <= 0) return data;\n\n  // Extract the keys of the columns\n  const keys = Object.keys(data[0]);\n\n  // Determine the columns to keep\n  const columnsToKeep = keys.slice(0, -n);\n\n  // Filter columns for each row\n  return data.map(row => {\n    const newRow = {};\n    columnsToKeep.forEach(key => {\n      newRow[key] = row[key];\n    });\n    return newRow;\n  });\n}\n\nfinal_data = removeSuffix(final_data_raw, \"method\", \"_rf\");\n//console.log(final_data)\n\n// Remove the last 4 columns from the data\nfilteredData = removeLastNColumns(final_data, 6);\n\n//console.log(filteredData)\n\nfunction removeLastNItems(array, n) {\n  return array.slice(0, -n);\n}\n\n\n// Remove the last 4 items\nfilteredColumnInfo = removeLastNItems(column_info, 12);\n\nfilteredColumnGroups = removeLastNItems(column_groups, 2);\n\n//console.log(filteredColumnGroups)\n\n\n```\n::: {.column-page}\n## Results - Heatmap\n\n\n```{ojs}\n//| echo: false\n//| column: page\n\n\nfunction transpose_list_of_objects(list) {\n      return Object.fromEntries(Object.keys(list[0]).map(key => [key, list.map(d => d[key])]))\n    }\n\nfunkyheatmap(\n      transpose_list_of_objects(final_data),\n      transpose_list_of_objects(column_info),\n      [],\n      transpose_list_of_objects(column_groups),\n      \n      [],\n      palettes,\n      {\n          fontSize: 14,\n          rowHeight: 26,\n          rootStyle: 'max-width: none',\n          colorByRank: true\n      }\n    );\n\n\n```\n\n\n\n## Results - Table\n```{r}\n#| echo: false\n#| warning: false\n#| column: page\n\nlibrary(tibble)\nlibrary(dplyr)\n\nfinal_data_csv <- read_csv(\"./data/final_data.csv\", show_col_types = FALSE)\n\nfinal_data_csv$...1 <- NULL\n\nfinal_data_csv$method<-gsub(\"_rf\",\"\",as.character(final_data_csv$method))\n\ncolumns_to_normalize <- c(\"spfracZero\", \"spLibSize\", \"spEffLibSize\", \"spTMM\", \"spScaledVar\", \n                          \"spScaledMean\", \"splibsizeFracezero\", \"spCorPearson\", \"ftFracZero\", \n                          \"ftScaledVar\", \"ftScaledMean\", \"ftPearson\", \"ftScaleMeanVal\", \n                          \"ftMeanFraczero\", \"TM\", \"NWE\", \"CSM\", \"celltype_interaction\", \n                          \"L_stats\", \"nn_correlation\", \"morans_I\", \"ARI\", \"NMI\", \"recall_svg\", \n                          \"precision_svg\", \"rmse_ctprob\", \"jsd_ctprob\", \"mantel_cor\", \"cosine_cor\")\n                          # \"pred_time_cells200_features200\", \"pred_time_cells3000_features500\", \n                          # \"pred_time_cells5000_features1000\", \"pred_memory_cells200_features200\", \n                          # \"pred_memory_cells3000_features500\", \"pred_memory_cells5000_features1000\",\n                          # \"predstring_time_cells200_features200\")\n\nfinal_data_csv[columns_to_normalize] <- lapply(final_data_csv[columns_to_normalize], function(x) {\n  (x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))\n})\n\nfinal_data_csv$method <- factor(final_data_csv$method)\nfinal_data_csv$adaptor <- factor(final_data_csv$adaptor)\n\ndatatable(\n  final_data_csv,\n  options = list(\n    pageLength = 15,\n    scrollX = TRUE,\n    searching = TRUE,\n    autoWidth = TRUE,\n    border = TRUE\n    \n  ),\n  filter = \"top\",\n  class = 'stripe compact',\n  style = 'bootstrap'\n) %>%\n  formatRound(columns = which(sapply(final_data_csv, is.numeric)), digits = 2)\n```\n\n:::\n\n:::\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":false,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.56","resources":["../js","js"],"editor":"visual","page-footer":{"center":"#&copy Sydney Precision Data Science Center"},"theme":"flatly","title":"Results"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}